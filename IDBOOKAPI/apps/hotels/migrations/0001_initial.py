# Generated by Django 4.2.3 on 2023-07-11 12:50

import IDBOOKAPI.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('org_resources', '0003_roomtype'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_category', models.CharField(choices=[('Hotel', 'Hotel'), ('Hotel & Restaurant', 'Hotel & Restaurant'), ('Hotel, Bar & Restaurant', 'Hotel, Bar & Restaurant'), ('Hotel & Bar', 'Hotel & Bar'), ('Hotel, Bar, Spa & Restaurant', 'Hotel, Bar, Spa & Restaurant')], default='', max_length=255)),
                ('name', models.CharField(db_index=True, max_length=30)),
                ('slug', models.SlugField(max_length=200)),
                ('checkin_time', models.TimeField(default=IDBOOKAPI.utils.get_default_time)),
                ('checkout_time', models.TimeField(default=IDBOOKAPI.utils.get_default_time)),
                ('full_address', models.CharField(blank=True, max_length=100)),
                ('district', models.CharField(blank=True, max_length=20)),
                ('state', models.CharField(choices=[('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chhattisgarh', 'Chhattisgarh'), ('Chandigarh', 'Chandigarh'), ('Dadra and Nagar Haveli', 'Dadra and Nagar Haveli'), ('Daman and Diu', 'Daman and Diu'), ('Delhi', 'Delhi'), ('Goa', 'Goa'), ('Gujarat', 'Gujarat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jammu and Kashmir', 'Jammu and Kashmir'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Ladakh', 'Ladakh'), ('Lakshadweep', 'Lakshadweep'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Punjab', 'Punjab'), ('Pondicherry', 'Pondicherry'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('West Bengal', 'West Bengal')], default='', max_length=30)),
                ('country', models.CharField(default='INDIA', max_length=15)),
                ('pin_code', models.PositiveIntegerField(blank=True)),
                ('location', models.CharField(blank=True, help_text='Google map URL', max_length=255)),
                ('area_name', models.CharField(blank=True, help_text='Area Name', max_length=60)),
                ('city_name', models.CharField(blank=True, help_text='City Name', max_length=35)),
                ('latitude', models.FloatField(default=0, help_text='Latitude')),
                ('longitude', models.FloatField(default=0, help_text='Longitude')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_no', models.CharField(max_length=15)),
                ('description', models.TextField(blank=True)),
                ('starting_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('featured', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amenity', models.ManyToManyField(related_name='hotel_amenities', to='org_resources.amenity')),
            ],
            options={
                'verbose_name': 'hotel',
                'verbose_name_plural': 'hotels',
                'ordering': ('-created',),
                'index_together': {('id', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('body', models.TextField(blank=True)),
                ('check_in_rating', models.DecimalField(decimal_places=2, max_digits=3)),
                ('breakfast', models.DecimalField(decimal_places=2, max_digits=3)),
                ('cleanliness', models.DecimalField(decimal_places=2, max_digits=3)),
                ('comfort', models.DecimalField(decimal_places=2, max_digits=3)),
                ('hotel_staff', models.DecimalField(decimal_places=2, max_digits=3)),
                ('facilities', models.DecimalField(decimal_places=2, max_digits=3)),
                ('over_all', models.DecimalField(decimal_places=2, max_digits=3)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='hotels.hotel')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_type', models.CharField(blank=True, choices=[('DELUXE ROOM', 'DELUXE'), ('CLASSIC ROOM', 'CLASSIC'), ('PREMIUM ROOM', 'PREMIUM'), ('HOTEL', 'HOTEL'), ('BATHROOM', 'BATHROOM'), ('SURROUNDING', 'SURROUNDING')], max_length=25)),
                ('upload_image', models.CharField(blank=True, max_length=255)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='hotels.hotel')),
            ],
            options={
                'verbose_name_plural': 'Gallery',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_duration', models.CharField(blank=True, choices=[('4 HOURS', 4), ('8 HOURS', 8), ('12 HOURS', 12), ('24 HOURS', 24)], max_length=25)),
                ('area', models.PositiveSmallIntegerField(default=100, help_text='Carpet area')),
                ('person_capacity', models.PositiveSmallIntegerField(default=1)),
                ('child_capacity', models.PositiveSmallIntegerField(default=0)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6)),
                ('discount', models.PositiveSmallIntegerField(default=0, help_text='In percentage, max 90%')),
                ('availability', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amenities', models.ManyToManyField(blank=True, related_name='rooms_amenities', to='org_resources.amenity')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='hotels.hotel')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms_type', to='org_resources.roomtype')),
            ],
            options={
                'verbose_name': 'room',
                'verbose_name_plural': 'rooms',
                'ordering': ('-price',),
                'index_together': {('id', 'room_type')},
            },
        ),
    ]
